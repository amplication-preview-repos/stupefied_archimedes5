/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, BlogAnalytics as PrismaBlogAnalytics } from "@prisma/client";

export class BlogAnalyticsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.BlogAnalyticsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.blogAnalytics.count(args);
  }

  async blogAnalyticsItems<T extends Prisma.BlogAnalyticsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogAnalyticsFindManyArgs>
  ): Promise<PrismaBlogAnalytics[]> {
    return this.prisma.blogAnalytics.findMany<Prisma.BlogAnalyticsFindManyArgs>(
      args
    );
  }
  async blogAnalytics<T extends Prisma.BlogAnalyticsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogAnalyticsFindUniqueArgs>
  ): Promise<PrismaBlogAnalytics | null> {
    return this.prisma.blogAnalytics.findUnique(args);
  }
  async createBlogAnalytics<T extends Prisma.BlogAnalyticsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogAnalyticsCreateArgs>
  ): Promise<PrismaBlogAnalytics> {
    return this.prisma.blogAnalytics.create<T>(args);
  }
  async updateBlogAnalytics<T extends Prisma.BlogAnalyticsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogAnalyticsUpdateArgs>
  ): Promise<PrismaBlogAnalytics> {
    return this.prisma.blogAnalytics.update<T>(args);
  }
  async deleteBlogAnalytics<T extends Prisma.BlogAnalyticsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BlogAnalyticsDeleteArgs>
  ): Promise<PrismaBlogAnalytics> {
    return this.prisma.blogAnalytics.delete(args);
  }
}
